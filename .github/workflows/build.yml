name: Build
on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          export FLASK_APP=app.py
          echo "Setup complete"

  python-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Black
        run: pip install black
      - name: Run Black
        run: black . --line-length 79
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Apply automatic formatting changes" && git push)

  quality-checks:
    needs: python-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install flake8 pylint pytest pytest-cov
          pip install -r requirements.txt
      - name: Run linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          pylint src/
      # - name: Run tests
      #   working-directory: ./unit_tests
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #   run: |
      #     export PYTHONPATH=$PYTHONPATH:$(pwd)/..
      #     pytest test_movies.py --cov=src --cov-report=xml

  # build-docker-image:
  #   needs: quality-checks
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Log in to GitHub Container Registry
  #       run: |
  #         echo "${{ secrets.ORG_GHCR_TOKEN }}" | docker login ghcr.io --username "oosborgschmitz" --password-stdin

  #     - name: Build Docker Image
  #       run: |
  #         IMAGE_NAME=ghcr.io/sse-movies/movie-backend:latest
  #         docker build -t $IMAGE_NAME .

  #     - name: Push Docker Image to GHCR
  #       run: |
  #         IMAGE_NAME=ghcr.io/sse-movies/movie-backend:latest
  #         docker push $IMAGE_NAME
  
  # deploy-azure-container-app:
  #   needs: build-docker-image
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.MOVIEBACKEND_AZURE_CREDENTIALS }}

  #     - name: Deploy to Azure Container App
  #       run: |
  #         az containerapp update \
  #           --name movie-backend \
  #           --resource-group SSE-movies \
  #           --image ghcr.io/sse-movies/movie-backend:latest

  #     - name: Azure Logout
  #       run: az logout